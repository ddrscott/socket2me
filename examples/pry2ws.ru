$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'socket2me'

class Stub

  def initialize
    Socket2me.configure do |config|
      config.ws_host = '0.0.0.0'
      config.ws_port = '3002'
    end

    Socket2me.start_ws_server
  end

  # Primary Rack entry point
  # outputs naked page with one helper JS method
  # @param [Hash] _env is the Rack environment. Use it to get HTTP info.
  def call(_env)
    [200, {'Content-Type' => 'text/html'}, [<<-HTML]]
<html>
<body>
<h1>Stub <small>generated by #{__FILE__}</small></h1>
<script>
  function appendP(text) {
    var p = document.createElement("p");
    p.innerHTML = text;
    document.body.appendChild(p);
  }
</script>
</body>
</html>
    HTML
  end

  # Helper to append text to body
  def append(text)
    Socket2me.exec_js("appendP('#{text}')")
  end

  # Helper to add twitter feed. FUN FUN!
  def add_twitter
    Socket2me.exec_js %Q{document.body.innerHTML += '<a class="twitter-timeline" href="https://twitter.com/hashtag/vim" data-widget-id="750697258291568640">#vim Tweets</a>'}

    Socket2me.exec_js %Q{
      (function (){var s = document.createElement('script');
      s.textContent='!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?"http":"https";if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");';
      document.body.appendChild(s); })();
    }.gsub("\n", '')
  end

  # We need to start pry in a new thread so the main thread can run the default
  # server and the web socket server.
  def pry_thread
    Thread.abort_on_exception = true
    Thread.new do
      require 'pry' 
      pry self
    end
  end
end

use Socket2me::Middleware::AddScriptTag

stub = Stub.new
stub.pry_thread

run stub
